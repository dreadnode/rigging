[tool.poetry]
name = "rigging"
version = "3.0.0"
description = "LLM Interaction Framework"
authors = ["Nick Landers <monoxgas@gmail.com>"]
license = "MIT"
repository = "https://github.com/dreadnode/rigging"
readme = "README.md"
packages = [{ include = "rigging" }]

# Dependencies

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.7.3"
pydantic-xml = "^2.11.0"
loguru = "^0.7.2"
litellm = "^1.67.2"
pandas = "^2.2.2"
eval-type-backport = "^0.2.0"                           # For 3.9 future annotations
elasticsearch = "^8.13.2"
xmltodict = "^0.13.0"
colorama = "^0.4.6"
boto3 = "^1.35.0"
boto3-stubs = { extras = ["s3"], version = "^1.35.0" }
logfire-api = "^3.1.1"
jsonpath-ng = "^1.7.0"
ruamel-yaml = "^0.18.10"
jsonref = "^1.1.0"
mcp = "^1.5.0"

vllm = { version = "^0.5.0", optional = true }
transformers = { version = "^4.41.0", optional = true }
accelerate = { version = "^0.30.1", optional = true }

asyncssh = { version = "^2.14.2", optional = true }
click = { version = "^8.1.7", optional = true }
httpx = { version = "^0.27.0", optional = true }
aiodocker = { version = "^0.22.2", optional = true }
websockets = { version = "^13.0", optional = true }

[tool.poetry.extras]
tracing = ["logfire"]
examples = ["asyncssh", "click", "httpx", "aiodocker", "websockets"]
all = [
    "vllm",
    "transformers",
    "accelerate",
    "asyncssh",
    "click",
    "httpx",
    "aiodocker",
    "websockets",
    "logfire",
]

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.27.1"
mypy = "^1.15.0"
ruff = "^0.10.0"
pytest = "^8.0.0"
pandas-stubs = "^2.2.1.240316"
coverage = "^7.5.1"
ipywidgets = "^8.1.3"
pytest-asyncio = "^0.23.7"
types-colorama = "^0.4.15.20240311"
types-requests = "2.31.0.6"

# Build

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Tests / Coverage

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.coverage.run]
command_line = "-m pytest"

[tool.coverage.report]
include = ["rigging/*.py"]
show_missing = true

[tool.coverage.lcov]
output = "lcov.info"

# Tracing

[tool.logfire]
ignore_no_config = true

# Type Checking

[tool.mypy]
plugins = "pydantic.mypy"
strict = true

# Formatting / Linting

[tool.ruff]
target-version = "py310"
line-length = 100
extend-exclude = [
    "*.ipynb",    # jupyter notebooks
    "examples/*", # example files
    ".github/*",  # github files
]

[tool.ruff.lint]
select = [ "ALL" ]
ignore = [
    "E501",     # line too long (we make best effort)
    "TRY003",   # long messages in exception classes
    "EM",       # picky message construction for exceptions
    "C90",      # mccabe complexity
    "A002",     # shadowing built-in
    "D",        # docstrings
    "ANN",      # annotations (handled by mypy)
    "PLR0913",  # too many arguments
    "ERA001",   # commented out code
    "FIX002",   # contains todo, consider fixing
    "TD002",    # TODO
    "TD003",    # TODO
    "PLR0911",  # too many return statements
    "FBT003",   # boolean positional in function call
]

[tool.ruff.format]
skip-magic-trailing-comma = false